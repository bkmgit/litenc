==RFC2544 test==

       +-----------------+     
  eth0 |                 | eth1
    +-<|TG   tester0   TA|<-+
    |  |                 |  |
    |  +-----------------+  |
    |                       |
    |  +-----------------+  |
    |  |      dut0       |  |
    +->|       ->        |>-+
  eth0 |                 | eth1
       +-----------------+



python ./rfc2544.py --config=../topology-localhost.xml --dst-node=tester0 --dst-node-interface=eth1 \
--src-node=tester0 --src-node-interface=eth0 --dst-mac-address="70:B3:D5:EC:20:01" \
--src-mac-address="70:B3:D5:EC:20:00" --dst-ipv4-address="192.0.2.2" --src-ipv4-udp-port=49184 \
--src-ipv4-address="192.0.2.1" --frame-size=64 --trial-time=120 --speed=1000000000 | grep "^#"

#===Throughput===
#1 1488095.238095 pps, 20 octets interframe gap, 100.00% ... 178571428 / 178571428
#Result: 1488095.238095 pps
#===Latency===
#Measurement style - bit forwarding
#1 896 ns (min=864 ns, max=896 ns) ... 178571428 / 178571428
#2 896 ns (min=864 ns, max=896 ns) ... 178571428 / 178571428
#3 904 ns (min=872 ns, max=904 ns) ... 178571428 / 178571428
#4 904 ns (min=872 ns, max=904 ns) ... 178571428 / 178571428
#5 904 ns (min=872 ns, max=904 ns) ... 178571428 / 178571428
#6 904 ns (min=872 ns, max=904 ns) ... 178571428 / 178571428
#7 904 ns (min=872 ns, max=904 ns) ... 178571428 / 178571428
#8 904 ns (min=872 ns, max=904 ns) ... 178571428 / 178571428
#9 896 ns (min=864 ns, max=896 ns) ... 178571428 / 178571428
#10 904 ns (min=872 ns, max=904 ns) ... 178571428 / 178571428
#11 896 ns (min=864 ns, max=896 ns) ... 178571428 / 178571428
#12 896 ns (min=864 ns, max=896 ns) ... 178571428 / 178571428
#13 896 ns (min=864 ns, max=896 ns) ... 178571428 / 178571428
#14 904 ns (min=872 ns, max=904 ns) ... 178571428 / 178571428
#15 904 ns (min=872 ns, max=904 ns) ... 178571428 / 178571428
#16 904 ns (min=872 ns, max=904 ns) ... 178571428 / 178571428
#17 904 ns (min=872 ns, max=904 ns) ... 178571428 / 178571428
#18 896 ns (min=864 ns, max=896 ns) ... 178571428 / 178571428
#19 896 ns (min=864 ns, max=896 ns) ... 178571428 / 178571428
#20 904 ns (min=872 ns, max=904 ns) ... 178571428 / 178571428
#Result: 900.800000 nanoseconds
#===Frame loss rate===
#1 100% rate, 0% loss, (100.000000% rate actual), 1488095.238095 pps (1488095.238095 pps actual), 20 octets interframe gap ... 178571428 / 178571428
#2 90% rate, 0% loss, (89.361702% rate actual), 1339285.714286 pps (1329787.234043 pps actual), 30 octets interframe gap ... 159574468 / 159574468
#===Back to back frames===
#1 2 back-to-back frames ... 120 / 120
#2 4 back-to-back frames ... 240 / 240
#3 8 back-to-back frames ... 480 / 480
#4 16 back-to-back frames ... 960 / 960
#5 32 back-to-back frames ... 1920 / 1920
#6 64 back-to-back frames ... 3840 / 3840
#7 128 back-to-back frames ... 7680 / 7680
#8 256 back-to-back frames ... 15360 / 15360
#9 512 back-to-back frames ... 30720 / 30720
#10 1024 back-to-back frames ... 61440 / 61440
#11 2048 back-to-back frames ... 122880 / 122880
#12 4096 back-to-back frames ... 245760 / 245760
#13 8192 back-to-back frames ... 491520 / 491520
#14 16384 back-to-back frames ... 983040 / 983040
#15 32768 back-to-back frames ... 1966080 / 1966080
#16 65536 back-to-back frames ... 3932160 / 3932160
#17 131072 back-to-back frames ... 7864320 / 7864320
#18 262144 back-to-back frames ... 15728641 / 15728641
#19 524288 back-to-back frames ... 31457282 / 31457282
#20 1048576 back-to-back frames ... 62914565 / 62914565
#21 1488095 back-to-back frames ... 89285707 / 89285707
#The back to back search is limited to bursts below 1 second.
#Result: >= 1488095


==Custom testing using the universal trial function==

Usage:
# set-net topology-ietf110.xml
# python ./test-rfc2544-trial.py --config=../topology-ietf110.xml \
 --test-time=5 --frame-size=1500 --interframe-gap=1000 \
 --src-node=tester0 --src-node-port=eth0 --dst-node=tester0 \
 --dst-node-port=eth1 --testframe-type=dynamic \
 --frame-data=`traffic-generator-make-testframe --frame-size=1500 \
 --dst-mac-address="70:b3:d5:ec:20:01" --src-mac-address="70:b3:d5:ec:20:00" \
 --src-ipv4-address="192.0.2.1" --src-ipv4-udp-port=49184 \
 --dst-ipv4-address="192.0.2.2" --dst-ipv4-udp-port=7`
 ...
5-config-tester0.xml - end
Transaction 5 started: 2021-03-05T14:09:04
Transaction 5 completed: 2021-03-05T14:09:04
Test time:                             5
Generated packets:                250000
Received  packets:                249894
Lost packets:                        106
Lost packets percent:           0.042400
Sequence errors:                      52
Sequence errors percent:        0.020800
Latency Min[nanoseconds]:          71810
Latency Max[nanoseconds]:       29179790

==With default static testframe==
# python ./test-rfc2544-trial.py --config=../topology-ietf110.xml \
--test-time=5 --frame-size=1500 --interframe-gap=15000 \
--src-node=tester0 --src-node-port=eth0 --dst-node=tester0 \
--dst-node-port=eth1 --frame-data=`traffic-generator-make-testframe \
--frame-size=1500 --dst-mac-address="70:b3:d5:ec:20:01" \
--src-mac-address="70:b3:d5:ec:20:00" --src-ipv4-address="192.0.2.1" \
--src-ipv4-udp-port=49184 --dst-ipv4-address="192.0.2.2" \
--dst-ipv4-udp-port=7`


==Self-test==
Usage:
# ./test-network-interconnect-tester.py --config=../topology.xml \
 --interface=analyzer.ge0 --interface=analyzer.xe0 \
 --interface=local.ge15 --interface=local.xe2 --interface=local.xe3 \
 --test-internal-loopback=true --test-analyzer=true

Output:

+------------------------------------------------------------------------------------------------+
| Port \ Run    |    1   |    2   |    3   |    4   |    5   |    6   |    7   |    8   |    9   |
+------------------------------------------------------------------------------------------------+
| NORM          |  98.70 |  76.19 |  50.00 |  50.00 |   5.00 |  50.00 |   5.00 |  10.00 |  76.19 |
|------------------------------------------------------------------------------------------------|
| analyzer.ge0  | 101.40 |  76.45 |  50.18 |  51.34 |   5.02 |  50.94 |   5.02 |  10.02 |  76.62 |
|------------------------------------------------------------------------------------------------|
| local.ge15    | 101.37 |  76.41 |  50.16 |  51.33 |   5.01 |  50.98 |   5.02 |  10.05 |  76.66 |
|------------------------------------------------------------------------------------------------|
| local.xe3     |  97.85 |  55.10 |  76.91 |  56.40 |  12.65 |  72.83 |  12.52 |  13.32 |  55.27 |
|------------------------------------------------------------------------------------------------|
| local.xe2     |  97.91 |  55.12 |  76.96 |  56.43 |  12.65 |  72.88 |  12.53 |  13.33 |  55.30 |
|------------------------------------------------------------------------------------------------|
| analyzer.xe0  | 101.37 |  76.41 |  50.16 |  51.32 |   5.01 |  50.92 |   5.02 |  10.02 |  76.59 |
+------------------------------------------------------------------------------------------------+

Yes there is a problem exposed in the output.


## Setup on Debian 10

On a fresh Debian 10 machine, setup a user with sudo privileges.
Then update the machine and install the following dependencies 

```bash
  cd $HOME
  sudo apt-get update
  sudo apt-get install git autoconf gcc libtool libxml2-dev libssh2-1-dev 
  sudo apt-get install make libncurses5-dev zlib1g-dev libreadline-dev libssl-dev
  sudo apt-get install libtirpc python-dev python-pip libxml2-dev
  pip install paramiko lxml
```

Modify the ssh settings by adding the lines

 Port 80
 Port 830
 Subsystem netconf "/usr/sbin/netconf-subsystem --ncxserver-sockname=830@/tmp/ncxserver.sock"

to the file `/etc/ssh/sshd_config`

Restart the ssh server

```bash
   sudo /etc/init.d/ssh restart
```

Then clone the repository with the library implementation and build the library

```bash
  git clone git://git.code.sf.net/p/yuma123/git yuma123-git
  cd yuma123-git
  autoreconf -i -f
  ./configure CFLAGS='-g -O0' CXXFLAGS='-g -O0' --prefix=/usr
  make
  sudo make install
```

Build the traffic generator

```bash
   cd example-modules/
   cd ietf-traffic-generator/
   autoreconf -i -f
   ./configure CFLAGS="-g -O0"  CXXFLAGS="-g -O0" --prefix=/usr 
   sudo make install
```

Build the Yang-rpc module

```bash
  cd ..
  autoreconf -i -f
  ./configure CFLAGS="-g -O0"  CXXFLAGS="-g -O0" --prefix=/usr 
  make
  sudo make install
  sudo python setup.py install
```

Now clone, build and run the test code

```bash
  cd $HOME
  git clone https://github.com/vlvassilev/litenc
  cd litenc
  sudo python setup.py install
  cd tntapi
  sudo python setup.py install
  cd example
  cd ietf-network-interconnect-tester
  python ./rfc2544.py --config=../topology-ietf111.xml --dst-node=tester0 --dst-node-interface=eth1 --src-
node=tester0 --src-node-interface=eth0 --dst-mac-address="70:B3:D5:EC:20:01" --src-mac-address="70:B3:D5:EC:20:0
0" --dst-ipv4-address="192.168.1.1" --src-ipv4-udp-port=49184 --src-ipv4-address="192.168.0.1" --frame-size=64 -
-trial-time=2 | grep "^#"
```

## Setup on CentOS 8


On a fresh CentOS 8 machine, setup a user with sudo privileges.
Then update the machine and install the following dependencies 

```bash
  cd $HOME
  sudo dnf update
  sudo dnf group install "Development Tools"
  sudo dnf -y install epel-release python2-devel policycoreutils-python-utils libtirpc-devel
  sudo dnf install ncurses-devel readline-devel libxml2-devel zlib-devel openssl-devel libssh2-devel
  pip2 install --user lxml
  pip2 install --user paramiko
```

Modify the ssh settings by adding the lines

 Port 80
 Port 830
 Subsystem netconf "/usr/sbin/netconf-subsystem --ncxserver-sockname=830@/tmp/ncxserver.sock"

to the file `/etc/ssh/sshd_config`

Restart the ssh server

```bash
  sudo semanage port -a -t ssh_port_t -p tcp 830
  sudo service sshd restart
```

Then clone the repository with the library implementation and build the library

```bash
  git clone git://git.code.sf.net/p/yuma123/git yuma123-git
  cd yuma123-git
  autoreconf -i -f
  ./configure CFLAGS='-g -O0' CXXFLAGS='-g -O0' --prefix=/usr
  make
  sudo make install
```

Build the traffic generator

```bash
   cd example-modules/
   cd ietf-traffic-generator/
   autoreconf -i -f
   ./configure CFLAGS="-g -O0"  CXXFLAGS="-g -O0" --prefix=/usr 
   sudo make install
```

Build the Yang-rpc module

```bash
  cd ..
  autoreconf -i -f
  ./configure CFLAGS="-g -O0"  CXXFLAGS="-g -O0" --prefix=/usr 
  make
  sudo make install
  sudo python2 setup.py install
```

Update Pythonpath so library can be found

```bash
  export PYTHONPATH=/usr/lib/python2.7/dist-packages/
```

Now clone, build and run the test code

```bash
  cd $HOME
  git clone https://github.com/vlvassilev/litenc
  cd litenc
  sudo python2 setup.py install
  cd tntapi
  sudo python2 setup.py install
  cd example
  cd ietf-network-interconnect-tester
  python2 ./rfc2544.py --config=../topology-ietf111.xml --dst-node=tester0 --dst-node-interface=eth1 --src-
node=tester0 --src-node-interface=eth0 --dst-mac-address="70:B3:D5:EC:20:01" --src-mac-address="70:B3:D5:EC:20:0
0" --dst-ipv4-address="192.168.1.1" --src-ipv4-udp-port=49184 --src-ipv4-address="192.168.0.1" --frame-size=64 -
-trial-time=2 | grep "^#"
```


